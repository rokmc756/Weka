#
- name: Deploy Weka binary
  shell: |
    cd {{ weka.base_path }}/{{ weka_file_name }} ; ./install.sh
  register: install_weka_binary
- debug: msg={{ install_weka_binary }}

#
- name: Validate if Weka Binary is still installing
  shell: weka status
  register: check_apply_status
  until: check_apply_status.stderr_lines.find("Make sure weka is running on this host by running") == -1
  ignore_errors: true
  when: inventory_hostname in hostvars[groups['workers'][0]]['ansible_hostname']
- debug: msg={{ check_apply_status }}
  when: print_debug == true and inventory_hostname in hostvars[groups['workers'][0]]['ansible_hostname']
  # retries: 100
  # delay: 10

#
- name: Remove previous config file to deploy
  shell: rm -f {{ weka.base_path }}/tools/install/config.sh
  when: inventory_hostname in hostvars[groups['workers'][0]]['ansible_hostname']

#
- name: Copy config files to prepare deploying Weka
  template: src={{ weka.config }}.sh.j2 dest={{ weka.base_path }}/tools/install/config.sh owner=root group=root mode=755 force=yes
  when: inventory_hostname in hostvars[groups['workers'][0]]['ansible_hostname']

#
- name: Deploy Weka
  shell: |
    sh {{ weka.base_path }}/tools/install/config.sh
  when: inventory_hostname in hostvars[groups['workers'][0]]['ansible_hostname']

#
- name: Validate if Weka Clsuter is still creating
  shell: weka status
  register: check_apply_status
  until: check_apply_status.stderr.find("Make sure weka is running on this host by running") == -1
  retries: 100
  delay: 10
  when: inventory_hostname in hostvars[groups['workers'][0]]['ansible_hostname']
- debug: msg={{ check_apply_status }}
  when: print_debug == true and inventory_hostname in hostvars[groups['workers'][0]]['ansible_hostname']

#
- name: Check drivers in the cluster
  shell: |
    weka cloud enable
  register: check_cluster_drives
  when: inventory_hostname in hostvars[groups['workers'][0]]['ansible_hostname']
- debug: msg={{ check_cluster_drives }}
  when: inventory_hostname in hostvars[groups['workers'][0]]['ansible_hostname']
  # weka cluster drive scan
  # weka cluster container activate
  # weka cluster drive activate

#
- name: Start IO in the cluster
  shell: |
    weka cluster start-io
  register: start_cluster_io
  when: inventory_hostname in hostvars[groups['workers'][0]]['ansible_hostname']
- debug: msg={{ start_cluster_io }}
  when: inventory_hostname in hostvars[groups['workers'][0]]['ansible_hostname'] and print_debug == true

#
- name: Copy expect script file to change admin password
  copy: src=change-admin-pass.sh dest=/root/change-admin-pass.sh mode=0755 owner=root group=root
  register: copy_expect_file
  when: inventory_hostname in hostvars[groups['workers'][0]]['ansible_hostname']
- debug: msg={{ copy_expect_file }}
  when: inventory_hostname in hostvars[groups['workers'][0]]['ansible_hostname'] and print_debug == true

#
- name: Change admin password
  shell: /root/change-admin-pass.sh
  register: change_admin_pass
  when: inventory_hostname in hostvars[groups['workers'][0]]['ansible_hostname']
- debug: msg={{ change_admin_pass }}
  when: inventory_hostname in hostvars[groups['workers'][0]]['ansible_hostname'] and print_debug == true
