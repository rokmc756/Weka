#
- name: Deploy Weka binary
  shell: |
    cd {{ weka.base_path }}/{{ weka_file_name }} ; ./install.sh
  register: install_weka_binary
- debug: msg={{ install_weka_binary }}

#
#- name: Create Weka Cluster
#  shell: |
#    weka cluster create {{ all_nodes_hostname }}
#  register: create_weka_cluster
#  when: inventory_hostname in hostvars[groups['workers'][0]]['ansible_hostname']
#- debug: msg={{ create_weka_cluster }}

####################################################################
# weka local ps
# weka local stop
# weka local rm default -f
# weka local setup host --name default --memory 5GiB
# pdsh -w weka4-node[01-05] weka local ps

#
- name: Stop local weka container
  shell: |
    weka local stop
  register: stop_local_weka
  when: inventory_hostname in groups['workers']
- debug: msg={{ stop_local_weka }}

#
- name: Remove local weka container
  shell: |
    weka local rm default -f
  register: remove_local_weka
  when: inventory_hostname in groups['workers']
- debug: msg={{ remove_local_weka }}

#
- name: Setup local weka container with specific memory size
  shell: |
    weka local setup host --name default --memory {{ weka.default_mem_size }}
  register: setup_local_weka
  when: inventory_hostname in groups['workers']
- debug: msg={{ setup_local_weka }}

#
- name: Create weka cluster with all nodes and second ip addresses
  shell: |
    weka cluster create --host-ips={{ all_nodes_1st_ipaddrs }} {{ all_nodes_hostname }}
  register: create_weka_cluster
  when: inventory_hostname in hostvars[groups['workers'][0]]['ansible_hostname']
- debug: msg={{ create_weka_cluster }}

#
- name: Check Wekca Cluster hosts
  shell: |
    weka cluster host
  register: check_weka_cluster_host
  when: inventory_hostname in hostvars[groups['workers'][0]]['ansible_hostname']
- debug: msg={{ check_weka_cluster_host }}

#
- name: Check Weka Local Resources
  shell: |
    weka local resources
  register: check_weka_local_resources
  when: inventory_hostname in hostvars[groups['workers'][0]]['ansible_hostname']
- debug: msg={{ check_weka_local_resources }}

#
- name: Assign number of cores into each compute/drives/frontends containers
  shell: |
    weka cluster container cores {{ item }} {{ cpu_cores.container_num }} --drives-dedicated-cores {{ cpu_cores.drives_num }} --compute-dedicated-cores {{ cpu_cores.compute_num }} --frontend-dedicated-cores {{ cpu_cores.frontends_num }}
    # weka cluster container cores {{ item }} {{ cpu_cores.container_num }} --drives-dedicated-cores {{ cpu_cores.drives_num }} --compute-dedicated-cores {{ cpu_cores.compute_num }} --no-frontends
  register: assign_cores_num
  with_sequence: start=0 end={{ cpu_cores.container_max_id }}
  when: inventory_hostname in hostvars[groups['workers'][0]]['ansible_hostname']
- debug: msg={{ assign_cores_num  }}

# It's not work with eth0 before applying configuraiton for container
# weka cluster start-io is not working with eth1 before applying configuration for container
#- name: Add network NIC
#  shell: |
#     weka cluster container net add {{ item }} eth1
#    # weka cluster container net add {{ item }} eth0
#    # weka cluster container net add {{ item }} eth0 --netmask=24
#    # weka cluster container net add {{ item }} eth1 --netmask=24
#  register: add_network_drive
#  with_sequence: start=0 end={{ cpu_cores.container_max_id }}
#  when: inventory_hostname in hostvars[groups['workers'][0]]['ansible_hostname']
#- debug: msg={{ add_network_drive }}
#  when: inventory_hostname in hostvars[groups['workers'][0]]['ansible_hostname']


#- name: Configure Network
#  shell: |
#    weka cluster default-net set --range 192.168.0.181-200 --netmask-bits 24
#  register: config_default_network
#  when: inventory_hostname in hostvars[groups['workers'][0]]['ansible_hostname']
#- debug: msg={{ config_default_network }}
#  when: inventory_hostname in hostvars[groups['workers'][0]]['ansible_hostname']

#
- name: Apply changes of core numbers for containers
  shell: |
    weka cluster container apply --all --force
  register: apply_changes_core_num
  when: inventory_hostname in hostvars[groups['workers'][0]]['ansible_hostname']
- debug: msg={{ apply_changes_core_num  }}
  when: print_debug == true and inventory_hostname in hostvars[groups['workers'][0]]['ansible_hostname']

#
- name: Validate if still appying
  shell: weka status
  register: check_apply_status
  until: check_apply_status.stderr.find("Make sure weka is running on this host by running") == -1
  when: inventory_hostname in hostvars[groups['workers'][0]]['ansible_hostname']
- debug: msg={{ check_apply_status }}
  when: print_debug == true and inventory_hostname in hostvars[groups['workers'][0]]['ansible_hostname']

#- name: Pause for 2 minutes to wait for applying changes of core numbers into containers
#  pause:
#    minutes: 1

#
#- name: Check local conatiners and cluster hosts as well as status
#  shell: |
#    weka local ps
#    weka cluster host
#    weka cluster node
#    weka status
#  register: check_status
#  when: inventory_hostname in hostvars[groups['workers'][0]]['ansible_hostname']
#- debug: msg={{ check_status  }}

#
# Need to define variable of nvme device list after find each device name of NVME on each hosts
# 1 to 4 number of nvme devices is ok to start io, 5 and 6 does not work
- name: Add NVME drives into each containers
  shell: |
    weka cluster drive add {{ item }} /dev/nvme0n1 /dev/nvme0n2
    # weka cluster drive add {{ item }} /dev/vdb /dev/vdc --force
    # weka cluster drive add {{ item }} /dev/nvme0n1 /dev/nvme0n2 /dev/nvme0n3 /dev/nvme0n4
    # weka cluster drive add {{ item }} /dev/nvme0n1 /dev/nvme0n2 /dev/nvme0n3 /dev/nvme0n4 /dev/nvme0n5 /dev/nvme0n6
  register: add_nvme_drive
  with_sequence: start=0 end={{ cpu_cores.container_max_id }}
  when: inventory_hostname in hostvars[groups['workers'][0]]['ansible_hostname']
- debug: msg={{ add_nvme_drive }}
  when: inventory_hostname in hostvars[groups['workers'][0]]['ansible_hostname']
  # weka cluster drive add {{ item }} /dev/vdb /dev/vdc --allow-format-non-wekafs-drives --force

#
- name: Check drivers in the cluster
  shell: |
    weka cluster drive
  register: check_cluster_drives
  when: inventory_hostname in hostvars[groups['workers'][0]]['ansible_hostname']
  #when: inventory_hostname in groups['workers']
- debug: msg={{ check_cluster_drives }}
  when: inventory_hostname in hostvars[groups['workers'][0]]['ansible_hostname']

#
- name: Start IO in the cluster
  shell: |
    weka cluster start-io
  register: start_cluster_io
  when: inventory_hostname in hostvars[groups['workers'][0]]['ansible_hostname']
- debug: msg={{ start_cluster_io }}
  when: inventory_hostname in hostvars[groups['workers'][0]]['ansible_hostname']

