- name: Weka Admin Login
  shell: |
    weka user login {{ weka.admin_user }} {{ weka.admin_change_pass }}
  register: weka_admin_login
  when: inventory_hostname in hostvars[groups['workers'][0]]['ansible_hostname']
- debug: msg={{ weka_admin_login }}
  # with_items: "{{ wekafs.group }}"


- name: Create Custom WekaFS Group
  shell: |
    weka fs group create {{ item.name }} --target-ssd-retention {{ item.ssd_retention }} --start-demote {{ item.start_demote }}
  register: create_wekafs_group
  with_items: "{{ wekafs.group }}"
  when: inventory_hostname in hostvars[groups['workers'][0]]['ansible_hostname']
- debug: msg={{ create_wekafs_group }}


- name: Create Custom WekaFS with the Specific Capacity
  shell: |
    weka fs create {{ item.name }} {{ item.group }} {{ item.size }}
  register: create_custom_wekafs
  with_items:
    - "{{ wekafs.fs.default }}"
    - "{{ wekafs.fs.filesystem }}"
    - "{{ wekafs.fs.obs }}"
    - "{{ wekafs.fs.s3 }}"
    - "{{ wekafs.fs.nfs }}"
    - "{{ wekafs.fs.smb }}"
  when: inventory_hostname in hostvars[groups['workers'][0]]['ansible_hostname']
- debug: msg={{ create_custom_wekafs }}


- name: Check Custom WekaFS
  shell: |
    weka fs
  register: check_custom_wekafs
  when: inventory_hostname in hostvars[groups['workers'][0]]['ansible_hostname']
- debug: msg={{ check_custom_wekafs }}


- name: Check WekaFS in the Containers
  shell: |
    weka cluster container
  register: check_wekafs_container
  when: inventory_hostname in hostvars[groups['workers'][0]]['ansible_hostname']
- debug: msg={{ check_wekafs_container }}
