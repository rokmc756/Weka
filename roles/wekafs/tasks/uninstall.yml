#
- name: Delete Custom WekaFS
  shell: |
    weka fs delete {{ item.name }} -f
  register: delete_custom_wekafs
  with_items:
    - "{{ wekafs.fs.default }}"
    - "{{ wekafs.fs.filesystem }}"
    - "{{ wekafs.fs.obs }}"
    - "{{ wekafs.fs.s3 }}"
    - "{{ wekafs.fs.nfs }}"
    - "{{ wekafs.fs.smb }}"
  ignore_errors: true
  when: inventory_hostname in hostvars[groups['workers'][0]]['ansible_hostname']
- debug: msg={{ delete_custom_wekafs }}
  when: inventory_hostname in hostvars[groups['workers'][0]]['ansible_hostname']

#
- name: Delete Custom WekaFS Group
  shell: |
    weka fs group delete {{ item.name }}
  register: delete_wekafs_group
  with_items: "{{ wekafs.group }}"
  ignore_errors: true
  when: inventory_hostname in hostvars[groups['workers'][0]]['ansible_hostname']
- debug: msg={{ delete_wekafs_group }}
  when: inventory_hostname in hostvars[groups['workers'][0]]['ansible_hostname']

#
- name: Check Custom WekaFS
  shell: |
    weka fs
  register: check_custom_wekafs
  ignore_errors: true
  when: inventory_hostname in hostvars[groups['workers'][0]]['ansible_hostname']
- debug: msg={{ check_custom_wekafs }}
  when: inventory_hostname in hostvars[groups['workers'][0]]['ansible_hostname']

#
- name: Check WekaFS in the containers
  shell: |
    weka cluster container
  register: check_wekafs_container
  ignore_errors: true
  when: inventory_hostname in hostvars[groups['workers'][0]]['ansible_hostname']
- debug: msg={{ check_wekafs_container }}
  when: inventory_hostname in hostvars[groups['workers'][0]]['ansible_hostname']

