---
- name: Get interface name from provided IP
  set_fact:
    netdev0: "{{ ansible_interfaces | map('regex_replace', '^', 'ansible_') | map('extract', vars) | selectattr('ipv4', 'defined') | selectattr('ipv4.address', 'match', _weka.backend.net.ipaddr0 ) | map(attribute='device') | first }}"
    netdev5: "{{ ansible_interfaces | map('regex_replace', '^', 'ansible_') | map('extract', vars) | selectattr('ipv4', 'defined') | selectattr('ipv4.address', 'match', _weka.backend.net.ipaddr5 ) | map(attribute='device') | first }}"
  when: inventory_hostname in groups['workers']
- debug: var={{ netdev0 }}
  when: print_debug == true and inventory_hostname in groups['workers']


- name: Get IP Address from provided network device name
  set_fact:
    ipaddr0: "{{ hostvars[inventory_hostname]['ansible_'~netdev0].ipv4.address }}"
    ipaddr5: "{{ hostvars[inventory_hostname]['ansible_'~netdev5].ipv4.address }}"
  when: inventory_hostname in groups['workers']
- debug: var={{ ipaddr0 }}
  when: print_debug == true and inventory_hostname in groups['workers']


# https://stackoverflow.com/questions/36328907/ansible-get-all-the-ip-addresses-of-a-group
- name: Define facts for all worker's hostname
  set_fact:
    all_ext1_hostnames: "{{ groups['workers'] | map('extract', hostvars, ['ansible_hostname']) | join(' ') }}"
  when: inventory_hostname in groups['workers']
- debug: msg={{ all_ext1_hostnames }}
  when: print_debug == true and inventory_hostname in groups['workers']


- name: Define fact for all worker's first ip addresses
  set_fact:
    all_ext1_ipaddrs: "{{ groups['workers'] | map('extract', hostvars, ['ansible_'~netdev5, 'ipv4', 'address']) | join(',') }}"
  when: inventory_hostname in groups['workers']
- debug: msg={{ all_ext1_ipaddrs }}
  when: print_debug == true and inventory_hostname in groups['workers']


- name: Get IP Address of Frontend who has most Lowest CPU usage
  shell: |
    weka cluster container | grep frontend | grep `weka cluster process | grep $(weka stats realtime --sort cpu -F role=FRONTEND | sed 1d | awk '{print $1" "$11 }' | sort -k2,2 | head -1 | awk '{print $1}') | awk '{print $2}'` | awk '{print $4}'
  register: feip_high_cpu_mcb
  when: _weka.client.wekafs == true and _weka.backend.mcb == true and inventory_hostname in groups['control']
- debug: msg={{ feip_high_cpu_mcb }}
  when: print_debug == true and inventory_hostname in groups['control']


- set_fact:
    feip_high_cpu: "{{ feip_high_cpu_mcb.stdout }}"
  when: _weka.client.wekafs == true and _weka.backend.mcb == true and inventory_hostname in groups['control']



# Management IP Address in case of SCB
- name: Get IP Address of Frontend who has most Lowest CPU usage in Weka SCB Cluster
  shell: |
    weka cluster container | \
    grep `weka cluster process | sed 1d | grep DPDK | awk '{print $1","$2}' | grep -e ^$(weka stats realtime --sort cpu -F role=FRONTEND | awk '{print $1" "$2 }' | sed 1d | sort -k2,2 | head -1 | awk '{print $1}'), | cut -d , -f 2` | \
    awk '{print $4}'
  register: feip_high_cpu_scb
  when: _weka.client.wekafs == true and _weka.backend.scb == true and inventory_hostname in groups['control']
- debug: msg={{ feip_high_cpu_scb }}
  when: print_debug == true and inventory_hostname in groups['control']


- set_fact:
    feip_high_cpu: "{{ feip_high_cpu_scb.stdout }}"
  when: _weka.client.wekafs == true and _weka.backend.scb == true and inventory_hostname in groups['control']


- name: Set Null Facts of Frontend IP Address
  set_fact:
    feip0: ""
  when: inventory_hostname in groups['control']


- name: Set Facts of Frontend IP Address
  set_fact:
    feip0: "{{ feip_high_cpu }}"
  delegate_to: "{{ item }}"
  delegate_facts: True
  with_items: "{{ groups['clients'] }}"
  when: inventory_hostname in groups['control']
- debug: msg={{ feip0 }}
  when: print_debug == true and inventory_hostname in groups['control']


#- set_fact:
#    s3_users_info: "{{ s3_users_info | default([]) + [item|combine({'feip': feip0|from_yaml})] }}"
#  loop: "{{ s3.users }}"
#  when: inventory_hostname in groups['clients']
#- debug: msg={{ s3_users_info }}
#  when: print_debug == true and inventory_hostname in groups['clients']

