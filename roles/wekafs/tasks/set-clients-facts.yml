# find /sys/class/net -type l -not -lname '*virtual*' -printf '%f\n' | sort
- name: Set Facts for Network Devices, Sequence and Prefix after finding alll network devices except lo
  set_fact:
    netseq: "{{ ansible_facts.interfaces | reject( 'search', 'lo' ) | map( 'regex_search' , '[0-9]*$' ) | sort }}"
    netdevs: "{{ ansible_facts.interfaces | reject( 'search', 'lo' ) | sort }}"
    netfix: "{{ ansible_facts.interfaces | reject( 'search', 'lo' ) | map( 'regex_search' , '^[a-zA-Z][a-zA-Z][a-zA-Z]' ) | sort | first }}"
    netcnt: "{{ ansible_facts.interfaces | reject( 'search', 'lo' ) | map( 'regex_search' , '[0-9]*$' ) | sort | count|int - 1 }}"
  when: inventory_hostname in groups['clients']

- debug: msg={{ netseq }}
- debug: msg={{ netdevs }}
- debug: msg={{ netfix }}
- debug: msg={{ netcnt }}


- set_fact:
    netdev_seq: "{{ dict( range(0,netcnt|int+1) | zip(netseq)) | dict2items(key_name='seq', value_name='end_seq') }}"
  when: inventory_hostname in groups['clients']
- debug: msg={{ netdev_seq }}
  when: print_debug == true and inventory_hostname in groups['clients']

#
- name: Define Variables for Network Device Names and IP Addresses and All Network Addresses Provided by IP Addresses and Prefix of Netdev
  set_fact:
    "{{ 'ipaddr'~item.seq }}": "{{ hostvars[inventory_hostname]['ansible_'~ netfix ~ item.end_seq].ipv4.address }}"
    "{{ 'all_net'~item.seq~'_ipaddrs' }}": "{{ groups['clients'] | map('extract', hostvars, ['ansible_' ~ netfix ~ item.end_seq, 'ipv4', 'address']) | join(',') }}"
    "{{ 'netdev'~item.seq }}": "{{ ansible_interfaces | map('regex_replace', '^', 'ansible_') | map('extract', vars) | selectattr('ipv4', 'defined') | selectattr('ipv4.address', 'match', weka.client.net['ipaddr' ~ item.seq] ) | map(attribute='device') | first }}"
  with_items: "{{ netdev_seq }}"
  when: inventory_hostname in groups['clients']
  #  "{{ 'netdev'~item.seq }}": "{{ ansible_interfaces | map('regex_replace', '^', 'ansible_') | map('extract', vars) | selectattr('ipv4', 'defined') | selectattr('ipv4.address', 'match', weka.client.net['ipaddr'~item.seq] ) | map(attribute='device') | first }}"

- meta: end_play

- name: Define Facts for All Hostnames and Management IP Addresses
  set_fact:
    all_ext1_hostnames: "{{ groups['clients'] | map('extract', hostvars, ['ansible_hostname']) | join(' ') }}"
    all_management_ipaddrs: "{{ groups['clients'] | map('extract', hostvars, ['ansible_'~ netdev3, 'ipv4', 'address']) | join(' ') }}"
  when: inventory_hostname in groups['clients']

#
- name: Define fact for Weka version
  set_fact:
    weka_file_name: "weka-{{ weka.major_version }}.{{ weka.minor_version }}.{{ weka.build_version }}{{ weka.patch_version }}"
    weka_tools_file_name: "{{ weka.tools.name }}-v{{ weka.tools.major_version }}.{{ weka.tools.minor_version }}.{{ weka.tools.patch_version }}"

