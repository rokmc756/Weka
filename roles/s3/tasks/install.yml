#
- name: Get All Container IDs for SCB Cluster
  shell: |
    weka cluster container | awk '{print $1}' | sed -e 1d | tr '\n' ',' | sed 's/,$/\n/'
  register: all_container_ids
  when: weka.backend.scb == true
- debug: msg={{ all_container_ids }}
  when: print_debug == true

#
- name: Get All Container IDs for MCB Cluster
  shell: |
    weka cluster container | grep frontend | awk '{print $1}' | tr '\n' ',' | sed 's/,$/\n/'
  register: all_container_ids
  when: weka.backend.mcb == true
- debug: msg={{ all_container_ids }}
  when: print_debug == true

# Arguments:
# default-fs-name   S3 default filesystem name
# config-fs-name    S3 config filesystem name
- name: Create S3 Backend Containers
  shell: |
    weka s3 cluster create {{ s3.fs.default.name }} {{ s3.fs.config.name }} --container {{ all_container_ids.stdout }}
  register: create_s3_cluster
- debug: msg={{ create_s3_cluster }}
  when: print_debug == true

#
- name: Validate if S3 Backend Containers are Online
  shell: weka s3 cluster status
  register: check_s3_cluster_status
  until: check_s3_cluster_status.stdout.find("Not Ready") == -1
  retries: 30
- debug: msg={{ check_s3_cluster_status }}
  when: print_debug == true

#
- name: Create S3 Bucket
  shell: |
    weka s3 bucket create {{ item.name }} --fs-name {{ item.fs }}
  register: create_s3_bucket
  with_items:
    - "{{ s3.buckets }}"
- debug: msg={{ create_s3_bucket }}
  when: print_debug == true

#
- name: Copy expect script file to add s3 user
  template: src=add-s3-user.sh.j2 dest={{ weka.base_path }}/add-s3-user.sh owner=root group=root mode=755 force=yes
  register: copy_expect_script
- debug: msg={{ copy_expect_script }}
  when: print_debug == true

#
- name: Add s3 user
  shell: |
    {{ weka.base_path }}/add-s3-user.sh {{ item.name }} {{ item.pass }}
  register: add_s3_user
  with_items:
    - "{{ s3.users }}"
- debug: msg={{ add_s3_user }}
  when: print_debug == true

#
- name: Attach Read-Write Permission
  shell: weka s3 policy attach {{ item.perm }} {{ item.name }}
  register: attach_rw_perm
  with_items:
    - "{{ s3.users }}"
- debug: msg={{ attach_rw_perm }}
  when: print_debug == true

#
- name: Remove Add S3 User Script
  file:
    state: absent
    path: "{{ weka.base_path }}/add-s3-user.sh"
  register: remove_add_s3_user_script
- debug: msg={{ remove_add_s3_user_script }}
  when: print_debug == true

