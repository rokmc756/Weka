#
- name: Check if MCB and SCB both are enabled to deploy in groups_vars/all.yml
  fail: msg="Stopped due to both MCB and SCB settings enabled in groups_vars/all.yml. Please choose one of them and rerun playbook"
  when: weka.backend.mcb == true and weka.backend.scb == true

#
- name: Get All Container IDs for Weka SCB Cluster
  shell: |
    weka cluster container | awk '{print $1}' | sed -e 1d | tr '\n' ',' | sed 's/,$/\n/'
  register: all_scb_container_ids
  when: weka.backend.scb == true
- debug: msg={{ all_scb_container_ids }}
  when: print_debug == true

#
- set_fact:
    all_cont_ids: "{{ all_scb_container_ids.stdout }}"
  when: weka.backend.scb == true and inventory_hostname in hostvars[groups['workers'][0]]['ansible_hostname']

#
- name: Get All Container IDs for Weka MCB Cluster
  shell: |
    weka cluster container | grep frontend | awk '{print $1}' | tr '\n' ',' | sed 's/,$/\n/'
  register: all_mcb_container_ids
  when: weka.backend.mcb == true
- debug: msg={{ all_mcb_container_ids }}
  when: print_debug == true

#
- set_fact:
    all_cont_ids: "{{ all_mcb_container_ids.stdout }}"
  when: weka.backend.mcb == true and inventory_hostname in hostvars[groups['workers'][0]]['ansible_hostname']

# Arguments:
# default-fs-name   S3 default filesystem name
# config-fs-name    S3 config filesystem name
- name: Create S3 Backend Containers
  shell: |
    weka s3 cluster create {{ s3.fs.default.name }} {{ s3.fs.config.name }} --container {{ all_cont_ids }}
  register: create_s3_cluster
- debug: msg={{ create_s3_cluster }}
  when: print_debug == true

#
- name: Validate if S3 Backend Containers are Online
  shell: weka s3 cluster status
  register: check_s3_cluster_status
  until: check_s3_cluster_status.stdout.find("Not Ready") == -1
  retries: 30
- debug: msg={{ check_s3_cluster_status }}
  when: print_debug == true

#
- name: Create S3 Buckets
  shell: |
    weka s3 bucket create {{ item.name }}
  register: create_s3_bucket
  with_items:
    - "{{ s3.buckets }}"
- debug: msg={{ create_s3_bucket }}
  when: print_debug == true
#
# weka s3 bucket create {{ item.name }} --fs-name {{ item.fs }}
# Need to check the meaning of --fs-name exactly especailly which bucket is relevant with
#
# weka s3 bucket create s3-bucket01 --fs-name s3-fs01
# error: An error occurred (InvalidBucketState) when calling the CreateBucket operation:
# Unable to create bucket because the folder path already exists and contains data objects.
# Use Weka-CLI --existing-path <path> for explicit path selection

#
- name: Add S3 Users
  shell: |
    weka user add {{ item.name }} s3 {{ item.pass }}
  register: add_s3_user
  with_items:
    - "{{ s3.users }}"
- debug: msg={{ add_s3_user }}
  when: print_debug == true

#
- name: Attach Permission to Users
  shell: weka s3 policy attach {{ item.perm }} {{ item.name }}
  register: attach_perms
  with_items:
    - "{{ s3.users }}"
- debug: msg={{ attach_perms }}
  when: print_debug == true

#- name: Copy expect script file to add s3 user
#  template: src=add-s3-user.sh.j2 dest={{ weka.base_path }}/add-s3-user.sh owner=root group=root mode=755 force=yes
#  register: copy_expect_script
#- debug: msg={{ copy_expect_script }}
#  when: print_debug == true

#- name: Remove Add S3 User Script
#  file:
#    state: absent
#    path: "{{ weka.base_path }}/add-s3-user.sh"
#  register: remove_add_s3_user_script
#- debug: msg={{ remove_add_s3_user_script }}
#  when: print_debug == true

