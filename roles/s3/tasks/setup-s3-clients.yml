# https://www.middlewareinventory.com/blog/ansible-dict/
# dnf config-manager --set-enabled devel

- name: Install S3 Client Packages
  become: true
  package: name={{item}} state=present
  with_items:
    - "s3cmd"


- name: Create s3cmd Directory for Download
  file:
    path: "{{ _s3.base_path }}/s3cmd/{{ item.name }}/download"
    state: directory
    owner: root
    group: root
    mode: 0755
    recurse: yes
  register: create_s3cmd_down_dir
  with_items:
    - "{{ _s3.users }}"
- debug: msg={{ create_s3cmd_down_dir }}
  when: print_debug == true


- name: Create s3cmd Directory for Upload
  file:
    path: "{{ _s3.base_path }}/s3cmd/{{ item.name }}/upload"
    state: directory
    owner: root
    group: root
    mode: 0755
    recurse: yes
  register: create_s3cmd_up_dir
  with_items: "{{ _s3.users }}"
- debug: msg={{ create_s3cmd_up_dir }}
  when: print_debug == true


- name: Copy S3 Config File for S3 Users to Weka S3 Clients
  template: src={{ item.name }}-s3cfg.j2 dest={{ _s3.base_path }}/s3cmd/{{ item.name }}-s3cfg owner=root group=root mode=755 force=yes
  register: copy_s3_config
  with_items:
    - "{{ s3_users_info }}"
- debug: msg={{ copy_s3_config }}
  when: print_debug == true


- name: Copy Parquet Test Files to Upload and Download into Weka S3 Backend
  copy: src=parquet-sample-data/{{ item }} dest={{ _s3.base_path }}/s3cmd/{{ item }} mode=0644 owner=root group=root
  register: copy_weka
  with_items:
    - "part-m-00001.gz.parquet"
    - "part-m-00003.gz.parquet"
    - "part-m-00005.gz.parquet"
    - "part-m-00000.gz.parquet"
    - "part-m-00002.gz.parquet"
    - "part-m-00004.gz.parquet"
    - "part-m-00006.gz.parquet"


- name: Upload Parquet Test Files into Weka S3 Backend
  shell: |
    s3cmd --no-check-certificate --config={{ _s3.base_path }}/s3cmd/{{ item.name }}-s3cfg put {{ _s3.base_path }}/s3cmd/part*.gz.parquet s3://{{ item.bucket }}
  register: upload_files_s3
  async: 600
  poll: 0
  with_items: "{{ _s3.users }}"
- debug: msg={{ upload_files_s3 }}
  when: print_debug == true


- name: Download Parquet Test Files into Weka S3 Backend
  shell: |
    s3cmd --no-check-certificate --config={{ _s3.base_path }}/s3cmd/{{ item.name }}-s3cfg get s3://{{ item.bucket }}/*.gz.parquet {{ _s3.base_path }}/s3cmd/{{ item.name }}/download
  register: download_files_s3
  async: 600
  poll: 0
  with_items: "{{ _s3.users }}"
- debug: msg={{ download_files_s3 }}
  when: print_debug == true

