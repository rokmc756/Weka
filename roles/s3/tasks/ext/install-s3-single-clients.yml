---
- name: Create S3 Base Directory for Download
  file:
    path: "{{ _s3.base_path }}/s3-base/download"
    state: directory
    owner: root
    group: root
    mode: 0755
    recurse: yes
  register: create_s3_down_dir
- debug: msg={{ create_s3_down_dir }}
  when: print_debug == true


- name: Create S3 Base Directory for Upload
  file:
    path: "{{ _s3.base_path }}/s3-base/upload"
    state: directory
    owner: root
    group: root
    mode: 0755
    recurse: yes
  register: create_s3_up_dir
- debug: msg={{ create_s3_up_dir }}
  when: print_debug == true


- name: Copy Parquet Test Files to Upload and Download into S3 Clients
  copy: src={{ item }} dest={{ _s3.base_path }}/s3-base/{{ item }} mode=0644 owner=root group=root
  register: copy_parquet_files
  with_items:
    - "part-m-00001.gz.parquet"
    - "part-m-00003.gz.parquet"
    - "part-m-00005.gz.parquet"
    - "part-m-00000.gz.parquet"
    - "part-m-00002.gz.parquet"
    - "part-m-00004.gz.parquet"
    - "part-m-00006.gz.parquet"
- debug: msg={{ copy_parquet_files }}
  when: print_debug == true


- name: Set Up an Alias for MinIO to Interact With the Weka S3 Backend
  shell: |
    /usr/local/bin/mc alias set {{ item.mc_alias }} https://{{ feip }}:{{ _s3.endpoint.port }} {{ item.access_key }} {{ item.secret_key }} --api "s3v4" --path "on"
  register: mc_alias_set
  with_items: "{{ _s3.users }}"
- debug: msg={{ mc_alias_set }}
  when: print_debug == true


- name: Upload Parquet Test Files Into Weka S3 Backend
  shell: |
    /usr/local/bin/mc cp {{ _s3.base_path }}/s3-base/part-m-*.gz.parquet {{ item.mc_alias }}/{{ item.bucket }}/
  register: upload_parquet_files
  with_items: "{{ _s3.users }}"
- debug: msg={{ upload_parquet_files }}
  when: print_debug == true


- name: Download Parquet Test Files into Weka S3 Backend
  shell: |
    /usr/local/bin/mc cp --recursive {{ item.mc_alias }}/{{ item.bucket }}/ {{ _s3.base_path }}/s3-base/download/
  register: download_parquet_files
  with_items: "{{ _s3.users }}"
- debug: msg={{ download_parquet_files }}
  when: print_debug == true

