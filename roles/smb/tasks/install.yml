# Setup: SMB service on WEKA
# weka smb domain join Administrator
# Password for Administrator:
# Using short domain name -- AD
# Joined 'WEKASMB' to dns domain 'ad.example.com'
# Not doing automatic DNS update in a clustered setup.

# Check that the ID mapping backend is “rfc2307”
# weka smb cluster

# And that the Active Directory has been joined
# weka smb domain
#   Domain Name:             ad.example.com
#   Domain Joined:           True
#   Domain Admin Username:   Administrator
#   Domain Netbios Name:     ad

# Optional, but useful: setting up DNS A records for either the SMB-running Backends or
# the Floating IPs allows you to access the SMB service by name (and also allows the use of the strongly-preferred later authentication algorithms).
# PS C:\Users\Administrator> Add-DnsServerResourceRecordA -Name "wekasmb" -ZoneName "ad.example.com" -AllowUpdateAny -IPv4Address "192.168.114.100"
# https://www.notion.so/wekaio/Multi-protocol-SMB-and-NFS-single-filesystem-access-8abcd9d23e004549a66e2e98fbcbd787?pvs=4


###################################################################################################################
# weka smb domain join Administrator --debug --extra-options --domain-ou "jtest.weka.io"

# For debug and open a 2224 port by firewalld
# weka local exec --container smbw /usr/sbin/pcs cluster status
# weka local exec --container smbw
# cd /var/log/pcsd
# tail -f *.log
# cd /var/log/pacemaker
# tail -f *.log
# cd /var/lib/pcsd
# tail -f *.log

# weka smb cluster update

#
- name: Get All Container IDs for SCB
  shell: |
    weka cluster container | awk '{print $1}' | sed -e 1d | tr '\n' ',' | sed 's/,$/\n/'
  register: all_container_ids
  when: weka.backend.scb == true and inventory_hostname in hostvars[groups['workers'][0]]['ansible_hostname']
- debug: msg={{ all_container_ids }}
  when: print_debug == true and inventory_hostname in hostvars[groups['workers'][0]]['ansible_hostname']

#
- name: Get All Container IDs for MCB
  shell: |
    weka cluster container | grep frontend | awk '{print $1}' | tr '\n' ',' | sed 's/,$/\n/'
  register: all_container_ids
  when: weka.backend.mcb == true and inventory_hostname in hostvars[groups['workers'][0]]['ansible_hostname']
- debug: msg={{ all_container_ids }}
  when: print_debug == true and inventory_hostname in hostvars[groups['workers'][0]]['ansible_hostname']

#
- name: Create SMB Cluster
  shell: |
    weka smb cluster create {{ smb.cluster.name }} {{ smb.ad.domain }} --domain-netbios-name {{ smb.ad.netbios }} ---encryption enabled \
    --container-ids {{ all_container_ids.stdout }} --smb-ips-range {{ smb.net.ips_range }} {{ smb.fs.name }}
  register: create_smb_cluster
  when: inventory_hostname in hostvars[groups['workers'][0]]['ansible_hostname']
- debug: msg={{ create_smb_cluster }}
  when: print_debug == true and inventory_hostname in hostvars[groups['workers'][0]]['ansible_hostname']

#
- name: Validate if SMB Cluster is Online
  shell: weka smb cluster status
  register: check_smb_cluster_status
  until: check_smb_cluster_status.stdout.find("Not Ready") == -1
  retries: 30
  when: inventory_hostname in hostvars[groups['workers'][0]]['ansible_hostname']
- debug: msg={{ check_smb_cluster_status }}
  when: print_debug == true and inventory_hostname in hostvars[groups['workers'][0]]['ansible_hostname']

#
- name: Login into Active Directory
  shell: |
    weka smb domain join {{ smb.ad.users.admin.id }} {{ smb.ad.users.admin.pass }}
  register: login_ad
  until: login_ad is succeeded
  retries: 10
  delay: 420
  when: inventory_hostname in hostvars[groups['workers'][0]]['ansible_hostname']
- debug: msg={{ login_ad }}
  when: print_debug == true and inventory_hostname in hostvars[groups['workers'][0]]['ansible_hostname']
  # weka smb domain join Administrator --debug --extra-options --domain-ou "jtest.weka.io"
  #  weka smb domain join {{ smb.ad.users.admin.id }} {{ smb.ad.users.admin.pass }} --debug --extra-options --domain-ou "jtest.weka.io"
  #      "stderr_lines": [],
  #      "stdout": "Domain join timed out",
  #      "stdout_lines": [
  #          "Domain join timed out"

#
- name: Add SMB Share
  shell: |
    weka smb share add smb-share-01 smb-fs01 --acl on --encryption cluster_default --internal-path /smb-share-01 --file-create-mask 0744 \
    --directory-create-mask 0755 --description 'Default SMB Share 01'
  register: add_smb_share
  when: inventory_hostname in hostvars[groups['workers'][0]]['ansible_hostname']
- debug: msg={{ add_smb_share }}
  when: print_debug == true and inventory_hostname in hostvars[groups['workers'][0]]['ansible_hostname']
  #    weka smb share add smb-share-02 smb-fs02 --acl on --encryption cluster_default --internal-path /smb-share-02 --file-create-mask 0744 --directory-create-mask 0755 --description TEST
  #  weka smb share add {{ smb.share.name }} {{ smb.fs.name }} --acl on

# *******************************
# Need to add mount -t wekafs smb-fs01 /mnt/weka
# and mkdir smb-share-01
# chmod 777 /mnt/weka/smb-share-01


# It works in Rocky 9 Client
# dnf install -y cifs-utils
# mkdir /mnt/wea-smb
# mount -t cifs -o username=jomoon,password=Changeme12\!\@,domain=JTEST,vers=3.0 //192.168.0.241/jtest-smb-share-01 /mnt/weka-smb/
# adcli join --domain SUPPORT.LOCAL --service-name=cifs --computer-name SMB-W --host-fqdn smb-w.SUPPORT.LOCAL -v --domain-ou ou=production,dc=support,dc=local -U admin
# weka local exec -C smbw bash -ce "chmod 777 /tmp/wekafs/*"
# fio --name=fio-long-1_`hostname` --rw=write --bs=512k --ioengine=posixaio --direct=1 --directory=/mnt/mounted_myshare/ --size=10GB --iodepth=8 --numjobs=1 --group_reporting --runtime=3000000 --time_based
# fio --name=fio-long-1_`hostname` --rw=write --bs=512k --ioengine=posixaio --direct=1 --directory=/mnt/mounted_myshare/ --size=10GB --iodepth=8 --numjobs=1 --group_reporting --runtime=3000000 --time_based
# https://www.notion.so/wekaio/FIP-SMBW-5fc9a2a0c4cd4c8ba9f6a0aafc9840df?pvs=4

# Need to test
# weka smb share add myshare default
# mkdir /mnt/default; mount -t wekafs default /mnt/default
# chmod 777 /mnt/default

# On Freeipa
# ipa-adtrust-install --netbios-name JTEST -a changeme


# osuse15-temp:~ # adcli join --domain jtest.weka.io --service-name=cifs --computer-name smb-clu01 --host-fqdn jtest.weka.io -v --domain-ou ou=production,dc=jtest,dc=weka,dc=io -U jomoon
# * Using fully qualified name: jtest.weka.io
# * Using domain name: jtest.weka.io
# * Using computer account name: smb-clu01
# * Calculated domain realm from name: JTEST.WEKA.IO
# * Discovering domain controllers: _ldap._tcp.jtest.weka.io
# * Sending netlogon pings to domain controller: cldap://192.168.0.100
# * Sending netlogon pings to domain controller: cldap://192.168.2.100
# * Sending netlogon pings to domain controller: cldap://192.168.1.100
# * Received NetLogon info from: WIN-R7SUOA8CDHH.jtest.weka.io
# * Wrote out krb5.conf snippet to /tmp/adcli-krb5-qaY8Dm/krb5.d/adcli-krb5-conf-uPd9um
#Password for jomoon@JTEST.WEKA.IO:
# * Authenticated as user: jomoon@JTEST.WEKA.IO
# * Using GSS-SPNEGO for SASL bind
# * Looked up short domain name: JTEST
# * Looked up domain SID: S-1-5-21-499262619-3455209110-3023308476
# * Using fully qualified name: jtest.weka.io
# * Using domain name: jtest.weka.io
# * Using computer account name: smb-clu01
# * Using domain realm: jtest.weka.io
# * Enrolling computer name: smb-clu01
# * Generated 120 character computer password
# * Using keytab: FILE:/etc/krb5.keytab
# * Found computer account for smb-clu01$ at: CN=SMB-CLU01,CN=Computers,DC=jtest,DC=weka,DC=io
# ! The computer account smb-clu01 already exists, but is not in the desired organizational unit.
#adcli: joining domain jtest.weka.io failed: The computer account smb-clu01 already exists, but is not in the desired organizational unit.

