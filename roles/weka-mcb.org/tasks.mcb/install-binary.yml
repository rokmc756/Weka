#
- name: Check if Weka tarball file is already existed
  stat: path={{ weka.base_path }}/{{ weka_file_name }}.{{ weka.bin_type }}
  register: weka_tarball_exists
- debug: msg={{ weka_tarball_exists }}

#
- name: Check if Weka installation directory is already existed
  stat: path={{ weka.base_path }}/{{ weka_file_name }}
  register: weka_install_dir_exists

#
#- name: Sanity check for existence of "{{ weka.base_path }}/{{ weka_file_name }}".tar file or "{{weka.base_path }}/{{ weka_file_name }}" directory
#  fail: msg="Either {{ weka.base_path }}/{{ weka_file_name }}.tar file or {{ weka.base_path }}/{{ weka_file_name }} directory already exists"
#  when: weka_tarball_exists.stat.exists != True or weka_install_dir_exists.stat.exists == True
  # fail: msg="Either {{ weka.base_path }}/{{ weka_file_name }}.tar file or {{ weka.base_path }}/{{ weka_file_name }} directory already exists"
  # when: weka_tarball_exists.stat.exists == True or weka_install_dir_exists.stat.exists == True

#
- name: Copy Weka tarball file from local directory, roles/weka/files
  copy: src={{ weka_file_name }}.tar dest={{ weka.base_path }}/{{ weka_file_name }}.tar mode=0644 owner=root group=root
  register: local_copy_weka
  when: weka.download == false and weka_tarball_exists.stat.exists == false

#
#- name: Download Weka tarball file
#  shell: |
#    wget -P {{ weka.base_path }} --auth-no-challenge https://xxxxxxxxxxxxxxxx:@get.weka.io/dist/v1/pkg/{{ weka_file_name }}.tar
#  register: download_weka_tarball
#  when: weka.download == true and weka_tarball_exists.stat.exists == false


# https://xxxxxxxxxxxxxxxx:@get.weka.io/dist/v1/pkg/{{ weka_file_name }}.tar
#- name: Download weka tarball file
#  get_url:
#    url: "{{ server_url }}"
#    dest: "{{ weka.base_path }}/{{ weka_file_name }}.tar"
#    owner: root
#    group: root
#    mode: 0755
#  when: weka.download == true and weka_tarball_exists.stat.exists == false

#
- name: Unarchive Weka tarball file
  unarchive:
    src: "{{ weka.base_path }}/{{ weka_file_name }}.{{ weka.bin_type }}"
    dest: "{{ weka.base_path }}"
    #  /{{ weka_file_name }}"
    owner: "root"
    group: "root"
    mode: "0755"
    remote_src: yes
  register: unarchive_weka_tarball
  when: weka_install_dir_exists.stat.exists == false

#
- name: Check if Weka tools directory is already existed
  stat: path={{ weka.base_path }}/{{ weka.tools.name }}
  register: weka_tools_dir_exists

#
- name: Copy Weka tools tarball file from local directory, roles/weka/files
  copy: src={{ weka_tools_file_name }}.{{ weka.tools.bin_type }} dest={{ weka.base_path }}/{{ weka_tools_file_name }}.{{ weka.tools.bin_type }} mode=0644 owner=root group=root
  register: local_copy_weka_tools
  when: weka.tools.download == false and weka_tools_dir_exists.stat.exists == false

#
# https://xxxxxxxxxxxxxxxx:@get.weka.io/dist/v1/pkg/{{ weka_file_name }}.tar
#- name: Download weka tarball file
#  get_url:
#    url: "{{ server_url }}"
#    dest: "{{ weka.base_path }}/{{ weka_file_name }}.tar"
#    owner: root
#    group: root
#    mode: 0755
#  when: weka.download == true and weka_tarball_exists.stat.exists == false

#
- name: Unarchive Weka tools tarball file
  unarchive:
    src: "{{ weka.base_path }}/{{ weka_tools_file_name }}.{{ weka.tools.bin_type }}"
    dest: "{{ weka.base_path }}/"
    #  {{ weka.tools.name }}"
    owner: "root"
    group: "root"
    mode: "0755"
    remote_src: yes
  register: unarchive_weka_tools_tarball
  when: weka_install_dir_exists.stat.exists == false

#
#- name: Create symbolic link for Weka tools directory
#  file:
#   src: "{{ weka.base_path }}/{{ weka_tools_file_name }}"
#   dest: "{{ weka.base_path }}/{{ weka.tools.name }}"
#   state: link

#
- name: Check if Weka tools directory is already existed
  stat: path={{ weka.base_path }}/{{ weka.tools.name }}
  register: weka_tools_dir_exists2

#
- name: Rename Weka tools directory
  shell: mv {{ weka.base_path }}/{{ weka_tools_file_name }} {{ weka.base_path }}/{{ weka.tools.name }}
  register: rename_weka_tools_dir
  when: weka.tools.download == false and weka_tools_dir_exists2.stat.exists == false

